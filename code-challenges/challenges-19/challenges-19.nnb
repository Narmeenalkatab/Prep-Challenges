{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "## Hacker Rank\n\nFor Thursdays you will be solving some selected challenges on HackerRank, please create an account if you don't have then\nFollow the links below:\nread them carefully and solve them then copy-paste your solution below in Code Block"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Required**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Append And Delete](https://www.hackerrank.com/challenges/append-and-delete/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "\"use strict\";\n\nconst fs = require(\"fs\");\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding(\"utf-8\");\n\nlet inputString = \"\";\nlet currentLine = 0;\n\nprocess.stdin.on(\"data\", function (inputStdin) {\n  inputString += inputStdin;\n});\n\nprocess.stdin.on(\"end\", function () {\n  inputString = inputString.split(\"\\n\");\n\n  main();\n});\n\nfunction readLine() {\n  return inputString[currentLine++];\n}\n\n/*\n * Complete the 'appendAndDelete' function below.\n *\n * The function is expected to return a STRING.\n * The function accepts following parameters:\n *  1. STRING s\n *  2. STRING t\n *  3. INTEGER k\n */\n\nfunction appendAndDelete(s, t, k) {\n  // Write your code here\n  let arrayS = s.split(\"\");\n  let arrayT = t.split(\"\");\n  let count = 0;\n  for (let i = 0; i === count && i < s.length; i++) {\n    if (arrayS[i] === arrayT[i]) {\n      count++;\n    }\n  }\n\n  let tMinusCount = t.length - count;\n  let sMinusCount = s.length - count;\n\n  let STK = k - (tMinusCount + sMinusCount);\n\n  if (\n    tMinusCount + sMinusCount < k &&\n    t.length + s.length > k &&\n    STK % 2 !== 0\n  ) {\n    return \"No\";\n  } else if (tMinusCount + sMinusCount <= k) {\n    return \"Yes\";\n  } else {\n    return \"No\";\n  }\n}\n\nfunction main() {\n  const ws = fs.createWriteStream(process.env.OUTPUT_PATH);\n\n  const s = readLine();\n\n  const t = readLine();\n\n  const k = parseInt(readLine().trim(), 10);\n\n  const result = appendAndDelete(s, t, k);\n\n  ws.write(result + \"\\n\");\n\n  ws.end();\n}\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Optional**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Encryption](https://www.hackerrank.com/challenges/encryption/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "\"use strict\";\n\nconst fs = require(\"fs\");\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding(\"utf-8\");\n\nlet inputString = \"\";\nlet currentLine = 0;\n\nprocess.stdin.on(\"data\", function (inputStdin) {\n  inputString += inputStdin;\n});\n\nprocess.stdin.on(\"end\", function () {\n  inputString = inputString.split(\"\\n\");\n\n  main();\n});\n\nfunction readLine() {\n  return inputString[currentLine++];\n}\n\n/*\n * Complete the 'encryption' function below.\n *\n * The function is expected to return a STRING.\n * The function accepts STRING s as parameter.\n */\n\nfunction encryption(s) {\n  // Write your code here\n  const ceil = Math.ceil(Math.sqrt(s.length));\n\n  let array = [];\n\n  while (s) {\n    array = array.concat(s.substring(0, ceil));\n    s = s.substring(ceil);\n  }\n\n  let result = [];\n\n  for (let i = 0; i < ceil; i++) {\n    result = result.concat(\n      array.reduce((r, v) => {\n        return r + (v[i] || \"\");\n      }, \"\")\n    );\n  }\n  return result.join(\" \");\n}\n\nfunction main() {\n  const ws = fs.createWriteStream(process.env.OUTPUT_PATH);\n\n  const s = readLine();\n\n  const result = encryption(s);\n\n  ws.write(result + \"\\n\");\n\n  ws.end();\n}\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [The Time In Words](https://www.hackerrank.com/challenges/the-time-in-words/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "\"use strict\";\n\nconst fs = require(\"fs\");\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding(\"utf-8\");\n\nlet inputString = \"\";\nlet currentLine = 0;\n\nprocess.stdin.on(\"data\", function (inputStdin) {\n  inputString += inputStdin;\n});\n\nprocess.stdin.on(\"end\", function () {\n  inputString = inputString.split(\"\\n\");\n\n  main();\n});\n\nfunction readLine() {\n  return inputString[currentLine++];\n}\n\n/*\n * Complete the 'timeInWords' function below.\n *\n * The function is expected to return a STRING.\n * The function accepts following parameters:\n *  1. INTEGER h\n *  2. INTEGER m\n */\n\nfunction timeInWords(h, m) {\n  // Write your code here\n  const timewords = [\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"ten\",\n    \"eleven\",\n    \"twelve\",\n    \"thirteen\",\n    \"fourteen\",\n    \"quarter\",\n    \"sixteen\",\n    \"seventeen\",\n    \"eighteen\",\n    \"nineteen\",\n    \"twenty\",\n    \"twenty one\",\n    \"twenty two\",\n    \"twenty three\",\n    \"twenty four\",\n    \"twenty five\",\n    \"twenty six\",\n    \"twenty seven\",\n    \"twenty eight\",\n    \"twenty nine\",\n    \"half\",\n  ];\n\n  let hour = timewords[h];\n  let minute;\n\n  if (m === 0) {\n    return `${hour} o' clock`;\n  } else if (m === 1) {\n    return `one minute past ${hour}`;\n  } else if (m === 15 || m === 30) {\n    return `${timewords[m]} past ${hour}`;\n  } else if (m < 30) {\n    minute = timewordswords[m];\n    return `${minute} minutes past ${hour}`;\n  } else if (m === 45) {\n    hour = timewords[h + 1];\n    return `${timewords[15]} to ${hour}`;\n  } else {\n    hour = timewords[h + 1];\n    minute = timewords[60 - m];\n    return `${minute} minutes to ${hour}`;\n  }\n}\n\nfunction main() {\n  const ws = fs.createWriteStream(process.env.OUTPUT_PATH);\n\n  const h = parseInt(readLine().trim(), 10);\n\n  const m = parseInt(readLine().trim(), 10);\n\n  const result = timeInWords(h, m);\n\n  ws.write(result + \"\\n\");\n\n  ws.end();\n}\n"
            ],
            "outputs": []
        }
    ]
}